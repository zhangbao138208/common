// Code generated by ent, DO NOT EDIT.

package winuserwallet

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the winuserwallet type in the database.
	Label = "win_user_wallet"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldCoin holds the string denoting the coin field in the database.
	FieldCoin = "coin"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldModifyAt holds the string denoting the modify_at field in the database.
	FieldModifyAt = "modify_at"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the winuserwallet in the database.
	Table = "win_user_wallet"
)

// Columns holds all SQL columns for winuserwallet fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldCoin,
	FieldVersion,
	FieldModifyAt,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the WinUserWallet queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUsername orders the results by the username field.
func ByUsername(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUsername, opts...).ToFunc()
}

// ByCoin orders the results by the coin field.
func ByCoin(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCoin, opts...).ToFunc()
}

// ByVersion orders the results by the version field.
func ByVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVersion, opts...).ToFunc()
}

// ByModifyAt orders the results by the modify_at field.
func ByModifyAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldModifyAt, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
