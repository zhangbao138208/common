// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CommonsColumns holds the columns for the "commons" table.
	CommonsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// CommonsTable holds the schema information for the "commons" table.
	CommonsTable = &schema.Table{
		Name:       "commons",
		Columns:    CommonsColumns,
		PrimaryKey: []*schema.Column{CommonsColumns[0]},
	}
	// WinBetslipsColumns holds the columns for the "win_betslips" table.
	WinBetslipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "round_id", Type: field.TypeString},
		{Name: "transaction_id", Type: field.TypeString},
		{Name: "game_plat_id", Type: field.TypeInt32},
		{Name: "xb_status", Type: field.TypeInt8},
		{Name: "xb_uid", Type: field.TypeUint32},
		{Name: "xb_username", Type: field.TypeString},
		{Name: "xb_profit", Type: field.TypeFloat64, Nullable: true},
		{Name: "stake", Type: field.TypeFloat64},
		{Name: "valid_stake", Type: field.TypeFloat64},
		{Name: "payout", Type: field.TypeFloat64, Nullable: true},
		{Name: "coin_refund", Type: field.TypeFloat64},
		{Name: "coin_before", Type: field.TypeFloat64},
		{Name: "game_id", Type: field.TypeString},
		{Name: "game_name", Type: field.TypeString, Nullable: true},
		{Name: "amount_type", Type: field.TypeInt32},
		{Name: "game_type_id", Type: field.TypeString},
		{Name: "game_group_id", Type: field.TypeInt32, Nullable: true},
		{Name: "sport_type", Type: field.TypeString, Nullable: true},
		{Name: "dt_started", Type: field.TypeInt},
		{Name: "dt_completed", Type: field.TypeInt, Nullable: true},
		{Name: "win_transaction_id", Type: field.TypeString, Nullable: true},
		{Name: "bet_json", Type: field.TypeString, Nullable: true},
		{Name: "reward_json", Type: field.TypeString, Nullable: true},
		{Name: "refund_json", Type: field.TypeString, Nullable: true},
		{Name: "create_time_str", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
	}
	// WinBetslipsTable holds the schema information for the "win_betslips" table.
	WinBetslipsTable = &schema.Table{
		Name:       "win_betslips",
		Columns:    WinBetslipsColumns,
		PrimaryKey: []*schema.Column{WinBetslipsColumns[0]},
	}
	// WinBetslipsDetailsColumns holds the columns for the "win_betslips_details" table.
	WinBetslipsDetailsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "xb_uid", Type: field.TypeUint32},
		{Name: "xb_username", Type: field.TypeString},
		{Name: "bet_json", Type: field.TypeString, Nullable: true},
		{Name: "reward_json", Type: field.TypeString, Nullable: true},
		{Name: "refund_json", Type: field.TypeString, Nullable: true},
	}
	// WinBetslipsDetailsTable holds the schema information for the "win_betslips_details" table.
	WinBetslipsDetailsTable = &schema.Table{
		Name:       "win_betslips_details",
		Columns:    WinBetslipsDetailsColumns,
		PrimaryKey: []*schema.Column{WinBetslipsDetailsColumns[0]},
	}
	// WinCoinLogColumns holds the columns for the "win_coin_log" table.
	WinCoinLogColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uid", Type: field.TypeInt32},
		{Name: "username", Type: field.TypeString},
		{Name: "category", Type: field.TypeInt8},
		{Name: "refer_id", Type: field.TypeInt, Nullable: true},
		{Name: "coin", Type: field.TypeFloat64},
		{Name: "coin_real", Type: field.TypeFloat64},
		{Name: "plat_id", Type: field.TypeInt32},
		{Name: "out_in", Type: field.TypeInt8},
		{Name: "game_id", Type: field.TypeInt32},
		{Name: "coin_before", Type: field.TypeFloat64},
		{Name: "coin_after", Type: field.TypeFloat64},
		{Name: "status", Type: field.TypeInt8},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
	}
	// WinCoinLogTable holds the schema information for the "win_coin_log" table.
	WinCoinLogTable = &schema.Table{
		Name:       "win_coin_log",
		Columns:    WinCoinLogColumns,
		PrimaryKey: []*schema.Column{WinCoinLogColumns[0]},
	}
	// WinConfigColumns holds the columns for the "win_config" table.
	WinConfigColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "title", Type: field.TypeString, Unique: true},
		{Name: "title_zh", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "show_app", Type: field.TypeInt8},
		{Name: "can_modify", Type: field.TypeInt8},
		{Name: "status", Type: field.TypeInt8},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
	}
	// WinConfigTable holds the schema information for the "win_config" table.
	WinConfigTable = &schema.Table{
		Name:       "win_config",
		Columns:    WinConfigColumns,
		PrimaryKey: []*schema.Column{WinConfigColumns[0]},
	}
	// WinDictColumns holds the columns for the "win_dict" table.
	WinDictColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "status", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
	}
	// WinDictTable holds the schema information for the "win_dict" table.
	WinDictTable = &schema.Table{
		Name:       "win_dict",
		Columns:    WinDictColumns,
		PrimaryKey: []*schema.Column{WinDictColumns[0]},
	}
	// WinDictItemColumns holds the columns for the "win_dict_item" table.
	WinDictItemColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "code", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt32},
		{Name: "refer_id", Type: field.TypeInt32},
		{Name: "status", Type: field.TypeBool},
		{Name: "is_show", Type: field.TypeInt8},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
	}
	// WinDictItemTable holds the schema information for the "win_dict_item" table.
	WinDictItemTable = &schema.Table{
		Name:       "win_dict_item",
		Columns:    WinDictItemColumns,
		PrimaryKey: []*schema.Column{WinDictItemColumns[0]},
	}
	// WinGameListColumns holds the columns for the "win_game_list" table.
	WinGameListColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "code", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "icon", Type: field.TypeString},
		{Name: "group_id", Type: field.TypeInt8},
		{Name: "plat_list_id", Type: field.TypeInt32},
		{Name: "revenue_rate", Type: field.TypeFloat64},
		{Name: "maintenance", Type: field.TypeString, Nullable: true},
		{Name: "game_count", Type: field.TypeInt32, Nullable: true},
		{Name: "remark", Type: field.TypeString},
		{Name: "sort", Type: field.TypeInt8},
		{Name: "status", Type: field.TypeInt8},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
		{Name: "updated_user", Type: field.TypeString, Nullable: true},
		{Name: "operator_name", Type: field.TypeString, Nullable: true},
		{Name: "category", Type: field.TypeString, Nullable: true},
	}
	// WinGameListTable holds the schema information for the "win_game_list" table.
	WinGameListTable = &schema.Table{
		Name:       "win_game_list",
		Columns:    WinGameListColumns,
		PrimaryKey: []*schema.Column{WinGameListColumns[0]},
	}
	// WinGameSlotColumns holds the columns for the "win_game_slot" table.
	WinGameSlotColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "game_id", Type: field.TypeInt32},
		{Name: "game_group_id", Type: field.TypeInt8},
		{Name: "plat_id", Type: field.TypeInt32},
		{Name: "provider", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "name_zh", Type: field.TypeString},
		{Name: "img", Type: field.TypeString},
		{Name: "img_new", Type: field.TypeString, Nullable: true},
		{Name: "is_new", Type: field.TypeBool},
		{Name: "is_casino", Type: field.TypeInt8},
		{Name: "game_type_id", Type: field.TypeString, Nullable: true},
		{Name: "game_type_name", Type: field.TypeString, Nullable: true},
		{Name: "favorite_star", Type: field.TypeInt32},
		{Name: "hot_star", Type: field.TypeInt32},
		{Name: "sort", Type: field.TypeInt32},
		{Name: "status", Type: field.TypeInt8},
		{Name: "device", Type: field.TypeInt8, Nullable: true},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
		{Name: "updated_user", Type: field.TypeString, Nullable: true},
		{Name: "maintenance", Type: field.TypeString, Nullable: true},
		{Name: "operator_name", Type: field.TypeString, Nullable: true},
	}
	// WinGameSlotTable holds the schema information for the "win_game_slot" table.
	WinGameSlotTable = &schema.Table{
		Name:       "win_game_slot",
		Columns:    WinGameSlotColumns,
		PrimaryKey: []*schema.Column{WinGameSlotColumns[0]},
	}
	// WinPlatListColumns holds the columns for the "win_plat_list" table.
	WinPlatListColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "config", Type: field.TypeString, Nullable: true},
		{Name: "rate", Type: field.TypeString, Nullable: true},
		{Name: "sort", Type: field.TypeInt8},
		{Name: "status", Type: field.TypeInt8},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
	}
	// WinPlatListTable holds the schema information for the "win_plat_list" table.
	WinPlatListTable = &schema.Table{
		Name:       "win_plat_list",
		Columns:    WinPlatListColumns,
		PrimaryKey: []*schema.Column{WinPlatListColumns[0]},
	}
	// WinUserColumns holds the columns for the "win_user" table.
	WinUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "fcoin", Type: field.TypeFloat64},
		{Name: "coin_commission", Type: field.TypeFloat64},
		{Name: "level_id", Type: field.TypeInt8},
		{Name: "role", Type: field.TypeInt8},
		{Name: "is_promoter", Type: field.TypeBool},
		{Name: "flag", Type: field.TypeUint32},
		{Name: "real_name", Type: field.TypeString},
		{Name: "signature", Type: field.TypeString},
		{Name: "birthday", Type: field.TypeString, Nullable: true},
		{Name: "area_code", Type: field.TypeString},
		{Name: "mobile", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "sex", Type: field.TypeBool},
		{Name: "bind_bank", Type: field.TypeBool},
		{Name: "address", Type: field.TypeString},
		{Name: "score", Type: field.TypeUint32},
		{Name: "promo_code", Type: field.TypeString, Unique: true},
		{Name: "sup_uid_1", Type: field.TypeUint32},
		{Name: "sup_username_1", Type: field.TypeString},
		{Name: "sup_uid_2", Type: field.TypeUint32},
		{Name: "sup_uid_3", Type: field.TypeUint32},
		{Name: "sup_uid_4", Type: field.TypeUint32},
		{Name: "sup_uid_5", Type: field.TypeUint32},
		{Name: "sup_uid_6", Type: field.TypeUint32},
		{Name: "sup_uid_top", Type: field.TypeInt32},
		{Name: "sup_username_top", Type: field.TypeString},
		{Name: "sup_level_top", Type: field.TypeInt32},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "password_coin", Type: field.TypeString},
		{Name: "ip", Type: field.TypeString},
		{Name: "ip_region", Type: field.TypeString, Nullable: true},
		{Name: "third_login_type", Type: field.TypeString},
		{Name: "freeze_cause", Type: field.TypeString, Nullable: true},
		{Name: "freeze_at", Type: field.TypeInt32, Nullable: true},
		{Name: "operator_name", Type: field.TypeString, Nullable: true},
		{Name: "created_name", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt8},
		{Name: "last_login_ip", Type: field.TypeString, Nullable: true},
		{Name: "last_login_ip_region", Type: field.TypeString, Nullable: true},
		{Name: "last_login_time", Type: field.TypeInt32, Nullable: true},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
	}
	// WinUserTable holds the schema information for the "win_user" table.
	WinUserTable = &schema.Table{
		Name:       "win_user",
		Columns:    WinUserColumns,
		PrimaryKey: []*schema.Column{WinUserColumns[0]},
	}
	// WinUserWalletColumns holds the columns for the "win_user_wallet" table.
	WinUserWalletColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "coin", Type: field.TypeFloat64},
		{Name: "version", Type: field.TypeInt, Nullable: true},
		{Name: "modify_at", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeInt32},
		{Name: "updated_at", Type: field.TypeInt32},
	}
	// WinUserWalletTable holds the schema information for the "win_user_wallet" table.
	WinUserWalletTable = &schema.Table{
		Name:       "win_user_wallet",
		Columns:    WinUserWalletColumns,
		PrimaryKey: []*schema.Column{WinUserWalletColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CommonsTable,
		WinBetslipsTable,
		WinBetslipsDetailsTable,
		WinCoinLogTable,
		WinConfigTable,
		WinDictTable,
		WinDictItemTable,
		WinGameListTable,
		WinGameSlotTable,
		WinPlatListTable,
		WinUserTable,
		WinUserWalletTable,
	}
)

func init() {
	WinCoinLogTable.Annotation = &entsql.Annotation{
		Table: "win_coin_log",
	}
	WinConfigTable.Annotation = &entsql.Annotation{
		Table: "win_config",
	}
	WinDictTable.Annotation = &entsql.Annotation{
		Table: "win_dict",
	}
	WinDictItemTable.Annotation = &entsql.Annotation{
		Table: "win_dict_item",
	}
	WinGameListTable.Annotation = &entsql.Annotation{
		Table: "win_game_list",
	}
	WinGameSlotTable.Annotation = &entsql.Annotation{
		Table: "win_game_slot",
	}
	WinPlatListTable.Annotation = &entsql.Annotation{
		Table: "win_plat_list",
	}
	WinUserTable.Annotation = &entsql.Annotation{
		Table: "win_user",
	}
	WinUserWalletTable.Annotation = &entsql.Annotation{
		Table: "win_user_wallet",
	}
}
