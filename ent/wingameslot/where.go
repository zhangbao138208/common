// Code generated by ent, DO NOT EDIT.

package wingameslot

import (
	"entgo.io/ent/dialect/sql"
	"gitlab.skig.tech/zero-core/common/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldID, id))
}

// GameID applies equality check predicate on the "game_id" field. It's identical to GameIDEQ.
func GameID(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldGameID, v))
}

// GameGroupID applies equality check predicate on the "game_group_id" field. It's identical to GameGroupIDEQ.
func GameGroupID(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldGameGroupID, v))
}

// PlatID applies equality check predicate on the "plat_id" field. It's identical to PlatIDEQ.
func PlatID(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldPlatID, v))
}

// Provider applies equality check predicate on the "provider" field. It's identical to ProviderEQ.
func Provider(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldProvider, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldName, v))
}

// NameZh applies equality check predicate on the "name_zh" field. It's identical to NameZhEQ.
func NameZh(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldNameZh, v))
}

// Img applies equality check predicate on the "img" field. It's identical to ImgEQ.
func Img(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldImg, v))
}

// ImgNew applies equality check predicate on the "img_new" field. It's identical to ImgNewEQ.
func ImgNew(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldImgNew, v))
}

// IsNew applies equality check predicate on the "is_new" field. It's identical to IsNewEQ.
func IsNew(v bool) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldIsNew, v))
}

// IsCasino applies equality check predicate on the "is_casino" field. It's identical to IsCasinoEQ.
func IsCasino(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldIsCasino, v))
}

// GameTypeID applies equality check predicate on the "game_type_id" field. It's identical to GameTypeIDEQ.
func GameTypeID(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldGameTypeID, v))
}

// GameTypeName applies equality check predicate on the "game_type_name" field. It's identical to GameTypeNameEQ.
func GameTypeName(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldGameTypeName, v))
}

// FavoriteStar applies equality check predicate on the "favorite_star" field. It's identical to FavoriteStarEQ.
func FavoriteStar(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldFavoriteStar, v))
}

// HotStar applies equality check predicate on the "hot_star" field. It's identical to HotStarEQ.
func HotStar(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldHotStar, v))
}

// Sort applies equality check predicate on the "sort" field. It's identical to SortEQ.
func Sort(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldSort, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldStatus, v))
}

// Device applies equality check predicate on the "device" field. It's identical to DeviceEQ.
func Device(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldDevice, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedUser applies equality check predicate on the "updated_user" field. It's identical to UpdatedUserEQ.
func UpdatedUser(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldUpdatedUser, v))
}

// Maintenance applies equality check predicate on the "maintenance" field. It's identical to MaintenanceEQ.
func Maintenance(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldMaintenance, v))
}

// OperatorName applies equality check predicate on the "operator_name" field. It's identical to OperatorNameEQ.
func OperatorName(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldOperatorName, v))
}

// GameIDEQ applies the EQ predicate on the "game_id" field.
func GameIDEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldGameID, v))
}

// GameIDNEQ applies the NEQ predicate on the "game_id" field.
func GameIDNEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldGameID, v))
}

// GameIDIn applies the In predicate on the "game_id" field.
func GameIDIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldGameID, vs...))
}

// GameIDNotIn applies the NotIn predicate on the "game_id" field.
func GameIDNotIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldGameID, vs...))
}

// GameIDGT applies the GT predicate on the "game_id" field.
func GameIDGT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldGameID, v))
}

// GameIDGTE applies the GTE predicate on the "game_id" field.
func GameIDGTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldGameID, v))
}

// GameIDLT applies the LT predicate on the "game_id" field.
func GameIDLT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldGameID, v))
}

// GameIDLTE applies the LTE predicate on the "game_id" field.
func GameIDLTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldGameID, v))
}

// GameGroupIDEQ applies the EQ predicate on the "game_group_id" field.
func GameGroupIDEQ(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldGameGroupID, v))
}

// GameGroupIDNEQ applies the NEQ predicate on the "game_group_id" field.
func GameGroupIDNEQ(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldGameGroupID, v))
}

// GameGroupIDIn applies the In predicate on the "game_group_id" field.
func GameGroupIDIn(vs ...int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldGameGroupID, vs...))
}

// GameGroupIDNotIn applies the NotIn predicate on the "game_group_id" field.
func GameGroupIDNotIn(vs ...int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldGameGroupID, vs...))
}

// GameGroupIDGT applies the GT predicate on the "game_group_id" field.
func GameGroupIDGT(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldGameGroupID, v))
}

// GameGroupIDGTE applies the GTE predicate on the "game_group_id" field.
func GameGroupIDGTE(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldGameGroupID, v))
}

// GameGroupIDLT applies the LT predicate on the "game_group_id" field.
func GameGroupIDLT(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldGameGroupID, v))
}

// GameGroupIDLTE applies the LTE predicate on the "game_group_id" field.
func GameGroupIDLTE(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldGameGroupID, v))
}

// PlatIDEQ applies the EQ predicate on the "plat_id" field.
func PlatIDEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldPlatID, v))
}

// PlatIDNEQ applies the NEQ predicate on the "plat_id" field.
func PlatIDNEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldPlatID, v))
}

// PlatIDIn applies the In predicate on the "plat_id" field.
func PlatIDIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldPlatID, vs...))
}

// PlatIDNotIn applies the NotIn predicate on the "plat_id" field.
func PlatIDNotIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldPlatID, vs...))
}

// PlatIDGT applies the GT predicate on the "plat_id" field.
func PlatIDGT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldPlatID, v))
}

// PlatIDGTE applies the GTE predicate on the "plat_id" field.
func PlatIDGTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldPlatID, v))
}

// PlatIDLT applies the LT predicate on the "plat_id" field.
func PlatIDLT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldPlatID, v))
}

// PlatIDLTE applies the LTE predicate on the "plat_id" field.
func PlatIDLTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldPlatID, v))
}

// ProviderEQ applies the EQ predicate on the "provider" field.
func ProviderEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldProvider, v))
}

// ProviderNEQ applies the NEQ predicate on the "provider" field.
func ProviderNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldProvider, v))
}

// ProviderIn applies the In predicate on the "provider" field.
func ProviderIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldProvider, vs...))
}

// ProviderNotIn applies the NotIn predicate on the "provider" field.
func ProviderNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldProvider, vs...))
}

// ProviderGT applies the GT predicate on the "provider" field.
func ProviderGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldProvider, v))
}

// ProviderGTE applies the GTE predicate on the "provider" field.
func ProviderGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldProvider, v))
}

// ProviderLT applies the LT predicate on the "provider" field.
func ProviderLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldProvider, v))
}

// ProviderLTE applies the LTE predicate on the "provider" field.
func ProviderLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldProvider, v))
}

// ProviderContains applies the Contains predicate on the "provider" field.
func ProviderContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldProvider, v))
}

// ProviderHasPrefix applies the HasPrefix predicate on the "provider" field.
func ProviderHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldProvider, v))
}

// ProviderHasSuffix applies the HasSuffix predicate on the "provider" field.
func ProviderHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldProvider, v))
}

// ProviderIsNil applies the IsNil predicate on the "provider" field.
func ProviderIsNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIsNull(FieldProvider))
}

// ProviderNotNil applies the NotNil predicate on the "provider" field.
func ProviderNotNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotNull(FieldProvider))
}

// ProviderEqualFold applies the EqualFold predicate on the "provider" field.
func ProviderEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldProvider, v))
}

// ProviderContainsFold applies the ContainsFold predicate on the "provider" field.
func ProviderContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldProvider, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldName, v))
}

// NameZhEQ applies the EQ predicate on the "name_zh" field.
func NameZhEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldNameZh, v))
}

// NameZhNEQ applies the NEQ predicate on the "name_zh" field.
func NameZhNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldNameZh, v))
}

// NameZhIn applies the In predicate on the "name_zh" field.
func NameZhIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldNameZh, vs...))
}

// NameZhNotIn applies the NotIn predicate on the "name_zh" field.
func NameZhNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldNameZh, vs...))
}

// NameZhGT applies the GT predicate on the "name_zh" field.
func NameZhGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldNameZh, v))
}

// NameZhGTE applies the GTE predicate on the "name_zh" field.
func NameZhGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldNameZh, v))
}

// NameZhLT applies the LT predicate on the "name_zh" field.
func NameZhLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldNameZh, v))
}

// NameZhLTE applies the LTE predicate on the "name_zh" field.
func NameZhLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldNameZh, v))
}

// NameZhContains applies the Contains predicate on the "name_zh" field.
func NameZhContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldNameZh, v))
}

// NameZhHasPrefix applies the HasPrefix predicate on the "name_zh" field.
func NameZhHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldNameZh, v))
}

// NameZhHasSuffix applies the HasSuffix predicate on the "name_zh" field.
func NameZhHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldNameZh, v))
}

// NameZhEqualFold applies the EqualFold predicate on the "name_zh" field.
func NameZhEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldNameZh, v))
}

// NameZhContainsFold applies the ContainsFold predicate on the "name_zh" field.
func NameZhContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldNameZh, v))
}

// ImgEQ applies the EQ predicate on the "img" field.
func ImgEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldImg, v))
}

// ImgNEQ applies the NEQ predicate on the "img" field.
func ImgNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldImg, v))
}

// ImgIn applies the In predicate on the "img" field.
func ImgIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldImg, vs...))
}

// ImgNotIn applies the NotIn predicate on the "img" field.
func ImgNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldImg, vs...))
}

// ImgGT applies the GT predicate on the "img" field.
func ImgGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldImg, v))
}

// ImgGTE applies the GTE predicate on the "img" field.
func ImgGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldImg, v))
}

// ImgLT applies the LT predicate on the "img" field.
func ImgLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldImg, v))
}

// ImgLTE applies the LTE predicate on the "img" field.
func ImgLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldImg, v))
}

// ImgContains applies the Contains predicate on the "img" field.
func ImgContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldImg, v))
}

// ImgHasPrefix applies the HasPrefix predicate on the "img" field.
func ImgHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldImg, v))
}

// ImgHasSuffix applies the HasSuffix predicate on the "img" field.
func ImgHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldImg, v))
}

// ImgEqualFold applies the EqualFold predicate on the "img" field.
func ImgEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldImg, v))
}

// ImgContainsFold applies the ContainsFold predicate on the "img" field.
func ImgContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldImg, v))
}

// ImgNewEQ applies the EQ predicate on the "img_new" field.
func ImgNewEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldImgNew, v))
}

// ImgNewNEQ applies the NEQ predicate on the "img_new" field.
func ImgNewNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldImgNew, v))
}

// ImgNewIn applies the In predicate on the "img_new" field.
func ImgNewIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldImgNew, vs...))
}

// ImgNewNotIn applies the NotIn predicate on the "img_new" field.
func ImgNewNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldImgNew, vs...))
}

// ImgNewGT applies the GT predicate on the "img_new" field.
func ImgNewGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldImgNew, v))
}

// ImgNewGTE applies the GTE predicate on the "img_new" field.
func ImgNewGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldImgNew, v))
}

// ImgNewLT applies the LT predicate on the "img_new" field.
func ImgNewLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldImgNew, v))
}

// ImgNewLTE applies the LTE predicate on the "img_new" field.
func ImgNewLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldImgNew, v))
}

// ImgNewContains applies the Contains predicate on the "img_new" field.
func ImgNewContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldImgNew, v))
}

// ImgNewHasPrefix applies the HasPrefix predicate on the "img_new" field.
func ImgNewHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldImgNew, v))
}

// ImgNewHasSuffix applies the HasSuffix predicate on the "img_new" field.
func ImgNewHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldImgNew, v))
}

// ImgNewIsNil applies the IsNil predicate on the "img_new" field.
func ImgNewIsNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIsNull(FieldImgNew))
}

// ImgNewNotNil applies the NotNil predicate on the "img_new" field.
func ImgNewNotNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotNull(FieldImgNew))
}

// ImgNewEqualFold applies the EqualFold predicate on the "img_new" field.
func ImgNewEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldImgNew, v))
}

// ImgNewContainsFold applies the ContainsFold predicate on the "img_new" field.
func ImgNewContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldImgNew, v))
}

// IsNewEQ applies the EQ predicate on the "is_new" field.
func IsNewEQ(v bool) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldIsNew, v))
}

// IsNewNEQ applies the NEQ predicate on the "is_new" field.
func IsNewNEQ(v bool) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldIsNew, v))
}

// IsCasinoEQ applies the EQ predicate on the "is_casino" field.
func IsCasinoEQ(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldIsCasino, v))
}

// IsCasinoNEQ applies the NEQ predicate on the "is_casino" field.
func IsCasinoNEQ(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldIsCasino, v))
}

// IsCasinoIn applies the In predicate on the "is_casino" field.
func IsCasinoIn(vs ...int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldIsCasino, vs...))
}

// IsCasinoNotIn applies the NotIn predicate on the "is_casino" field.
func IsCasinoNotIn(vs ...int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldIsCasino, vs...))
}

// IsCasinoGT applies the GT predicate on the "is_casino" field.
func IsCasinoGT(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldIsCasino, v))
}

// IsCasinoGTE applies the GTE predicate on the "is_casino" field.
func IsCasinoGTE(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldIsCasino, v))
}

// IsCasinoLT applies the LT predicate on the "is_casino" field.
func IsCasinoLT(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldIsCasino, v))
}

// IsCasinoLTE applies the LTE predicate on the "is_casino" field.
func IsCasinoLTE(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldIsCasino, v))
}

// GameTypeIDEQ applies the EQ predicate on the "game_type_id" field.
func GameTypeIDEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldGameTypeID, v))
}

// GameTypeIDNEQ applies the NEQ predicate on the "game_type_id" field.
func GameTypeIDNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldGameTypeID, v))
}

// GameTypeIDIn applies the In predicate on the "game_type_id" field.
func GameTypeIDIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldGameTypeID, vs...))
}

// GameTypeIDNotIn applies the NotIn predicate on the "game_type_id" field.
func GameTypeIDNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldGameTypeID, vs...))
}

// GameTypeIDGT applies the GT predicate on the "game_type_id" field.
func GameTypeIDGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldGameTypeID, v))
}

// GameTypeIDGTE applies the GTE predicate on the "game_type_id" field.
func GameTypeIDGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldGameTypeID, v))
}

// GameTypeIDLT applies the LT predicate on the "game_type_id" field.
func GameTypeIDLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldGameTypeID, v))
}

// GameTypeIDLTE applies the LTE predicate on the "game_type_id" field.
func GameTypeIDLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldGameTypeID, v))
}

// GameTypeIDContains applies the Contains predicate on the "game_type_id" field.
func GameTypeIDContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldGameTypeID, v))
}

// GameTypeIDHasPrefix applies the HasPrefix predicate on the "game_type_id" field.
func GameTypeIDHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldGameTypeID, v))
}

// GameTypeIDHasSuffix applies the HasSuffix predicate on the "game_type_id" field.
func GameTypeIDHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldGameTypeID, v))
}

// GameTypeIDIsNil applies the IsNil predicate on the "game_type_id" field.
func GameTypeIDIsNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIsNull(FieldGameTypeID))
}

// GameTypeIDNotNil applies the NotNil predicate on the "game_type_id" field.
func GameTypeIDNotNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotNull(FieldGameTypeID))
}

// GameTypeIDEqualFold applies the EqualFold predicate on the "game_type_id" field.
func GameTypeIDEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldGameTypeID, v))
}

// GameTypeIDContainsFold applies the ContainsFold predicate on the "game_type_id" field.
func GameTypeIDContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldGameTypeID, v))
}

// GameTypeNameEQ applies the EQ predicate on the "game_type_name" field.
func GameTypeNameEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldGameTypeName, v))
}

// GameTypeNameNEQ applies the NEQ predicate on the "game_type_name" field.
func GameTypeNameNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldGameTypeName, v))
}

// GameTypeNameIn applies the In predicate on the "game_type_name" field.
func GameTypeNameIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldGameTypeName, vs...))
}

// GameTypeNameNotIn applies the NotIn predicate on the "game_type_name" field.
func GameTypeNameNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldGameTypeName, vs...))
}

// GameTypeNameGT applies the GT predicate on the "game_type_name" field.
func GameTypeNameGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldGameTypeName, v))
}

// GameTypeNameGTE applies the GTE predicate on the "game_type_name" field.
func GameTypeNameGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldGameTypeName, v))
}

// GameTypeNameLT applies the LT predicate on the "game_type_name" field.
func GameTypeNameLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldGameTypeName, v))
}

// GameTypeNameLTE applies the LTE predicate on the "game_type_name" field.
func GameTypeNameLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldGameTypeName, v))
}

// GameTypeNameContains applies the Contains predicate on the "game_type_name" field.
func GameTypeNameContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldGameTypeName, v))
}

// GameTypeNameHasPrefix applies the HasPrefix predicate on the "game_type_name" field.
func GameTypeNameHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldGameTypeName, v))
}

// GameTypeNameHasSuffix applies the HasSuffix predicate on the "game_type_name" field.
func GameTypeNameHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldGameTypeName, v))
}

// GameTypeNameIsNil applies the IsNil predicate on the "game_type_name" field.
func GameTypeNameIsNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIsNull(FieldGameTypeName))
}

// GameTypeNameNotNil applies the NotNil predicate on the "game_type_name" field.
func GameTypeNameNotNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotNull(FieldGameTypeName))
}

// GameTypeNameEqualFold applies the EqualFold predicate on the "game_type_name" field.
func GameTypeNameEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldGameTypeName, v))
}

// GameTypeNameContainsFold applies the ContainsFold predicate on the "game_type_name" field.
func GameTypeNameContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldGameTypeName, v))
}

// FavoriteStarEQ applies the EQ predicate on the "favorite_star" field.
func FavoriteStarEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldFavoriteStar, v))
}

// FavoriteStarNEQ applies the NEQ predicate on the "favorite_star" field.
func FavoriteStarNEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldFavoriteStar, v))
}

// FavoriteStarIn applies the In predicate on the "favorite_star" field.
func FavoriteStarIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldFavoriteStar, vs...))
}

// FavoriteStarNotIn applies the NotIn predicate on the "favorite_star" field.
func FavoriteStarNotIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldFavoriteStar, vs...))
}

// FavoriteStarGT applies the GT predicate on the "favorite_star" field.
func FavoriteStarGT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldFavoriteStar, v))
}

// FavoriteStarGTE applies the GTE predicate on the "favorite_star" field.
func FavoriteStarGTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldFavoriteStar, v))
}

// FavoriteStarLT applies the LT predicate on the "favorite_star" field.
func FavoriteStarLT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldFavoriteStar, v))
}

// FavoriteStarLTE applies the LTE predicate on the "favorite_star" field.
func FavoriteStarLTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldFavoriteStar, v))
}

// HotStarEQ applies the EQ predicate on the "hot_star" field.
func HotStarEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldHotStar, v))
}

// HotStarNEQ applies the NEQ predicate on the "hot_star" field.
func HotStarNEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldHotStar, v))
}

// HotStarIn applies the In predicate on the "hot_star" field.
func HotStarIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldHotStar, vs...))
}

// HotStarNotIn applies the NotIn predicate on the "hot_star" field.
func HotStarNotIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldHotStar, vs...))
}

// HotStarGT applies the GT predicate on the "hot_star" field.
func HotStarGT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldHotStar, v))
}

// HotStarGTE applies the GTE predicate on the "hot_star" field.
func HotStarGTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldHotStar, v))
}

// HotStarLT applies the LT predicate on the "hot_star" field.
func HotStarLT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldHotStar, v))
}

// HotStarLTE applies the LTE predicate on the "hot_star" field.
func HotStarLTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldHotStar, v))
}

// SortEQ applies the EQ predicate on the "sort" field.
func SortEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldSort, v))
}

// SortNEQ applies the NEQ predicate on the "sort" field.
func SortNEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldSort, v))
}

// SortIn applies the In predicate on the "sort" field.
func SortIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldSort, vs...))
}

// SortNotIn applies the NotIn predicate on the "sort" field.
func SortNotIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldSort, vs...))
}

// SortGT applies the GT predicate on the "sort" field.
func SortGT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldSort, v))
}

// SortGTE applies the GTE predicate on the "sort" field.
func SortGTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldSort, v))
}

// SortLT applies the LT predicate on the "sort" field.
func SortLT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldSort, v))
}

// SortLTE applies the LTE predicate on the "sort" field.
func SortLTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldSort, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldStatus, v))
}

// DeviceEQ applies the EQ predicate on the "device" field.
func DeviceEQ(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldDevice, v))
}

// DeviceNEQ applies the NEQ predicate on the "device" field.
func DeviceNEQ(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldDevice, v))
}

// DeviceIn applies the In predicate on the "device" field.
func DeviceIn(vs ...int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldDevice, vs...))
}

// DeviceNotIn applies the NotIn predicate on the "device" field.
func DeviceNotIn(vs ...int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldDevice, vs...))
}

// DeviceGT applies the GT predicate on the "device" field.
func DeviceGT(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldDevice, v))
}

// DeviceGTE applies the GTE predicate on the "device" field.
func DeviceGTE(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldDevice, v))
}

// DeviceLT applies the LT predicate on the "device" field.
func DeviceLT(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldDevice, v))
}

// DeviceLTE applies the LTE predicate on the "device" field.
func DeviceLTE(v int8) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldDevice, v))
}

// DeviceIsNil applies the IsNil predicate on the "device" field.
func DeviceIsNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIsNull(FieldDevice))
}

// DeviceNotNil applies the NotNil predicate on the "device" field.
func DeviceNotNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotNull(FieldDevice))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int32) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedUserEQ applies the EQ predicate on the "updated_user" field.
func UpdatedUserEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldUpdatedUser, v))
}

// UpdatedUserNEQ applies the NEQ predicate on the "updated_user" field.
func UpdatedUserNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldUpdatedUser, v))
}

// UpdatedUserIn applies the In predicate on the "updated_user" field.
func UpdatedUserIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldUpdatedUser, vs...))
}

// UpdatedUserNotIn applies the NotIn predicate on the "updated_user" field.
func UpdatedUserNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldUpdatedUser, vs...))
}

// UpdatedUserGT applies the GT predicate on the "updated_user" field.
func UpdatedUserGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldUpdatedUser, v))
}

// UpdatedUserGTE applies the GTE predicate on the "updated_user" field.
func UpdatedUserGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldUpdatedUser, v))
}

// UpdatedUserLT applies the LT predicate on the "updated_user" field.
func UpdatedUserLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldUpdatedUser, v))
}

// UpdatedUserLTE applies the LTE predicate on the "updated_user" field.
func UpdatedUserLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldUpdatedUser, v))
}

// UpdatedUserContains applies the Contains predicate on the "updated_user" field.
func UpdatedUserContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldUpdatedUser, v))
}

// UpdatedUserHasPrefix applies the HasPrefix predicate on the "updated_user" field.
func UpdatedUserHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldUpdatedUser, v))
}

// UpdatedUserHasSuffix applies the HasSuffix predicate on the "updated_user" field.
func UpdatedUserHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldUpdatedUser, v))
}

// UpdatedUserIsNil applies the IsNil predicate on the "updated_user" field.
func UpdatedUserIsNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIsNull(FieldUpdatedUser))
}

// UpdatedUserNotNil applies the NotNil predicate on the "updated_user" field.
func UpdatedUserNotNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotNull(FieldUpdatedUser))
}

// UpdatedUserEqualFold applies the EqualFold predicate on the "updated_user" field.
func UpdatedUserEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldUpdatedUser, v))
}

// UpdatedUserContainsFold applies the ContainsFold predicate on the "updated_user" field.
func UpdatedUserContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldUpdatedUser, v))
}

// MaintenanceEQ applies the EQ predicate on the "maintenance" field.
func MaintenanceEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldMaintenance, v))
}

// MaintenanceNEQ applies the NEQ predicate on the "maintenance" field.
func MaintenanceNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldMaintenance, v))
}

// MaintenanceIn applies the In predicate on the "maintenance" field.
func MaintenanceIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldMaintenance, vs...))
}

// MaintenanceNotIn applies the NotIn predicate on the "maintenance" field.
func MaintenanceNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldMaintenance, vs...))
}

// MaintenanceGT applies the GT predicate on the "maintenance" field.
func MaintenanceGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldMaintenance, v))
}

// MaintenanceGTE applies the GTE predicate on the "maintenance" field.
func MaintenanceGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldMaintenance, v))
}

// MaintenanceLT applies the LT predicate on the "maintenance" field.
func MaintenanceLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldMaintenance, v))
}

// MaintenanceLTE applies the LTE predicate on the "maintenance" field.
func MaintenanceLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldMaintenance, v))
}

// MaintenanceContains applies the Contains predicate on the "maintenance" field.
func MaintenanceContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldMaintenance, v))
}

// MaintenanceHasPrefix applies the HasPrefix predicate on the "maintenance" field.
func MaintenanceHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldMaintenance, v))
}

// MaintenanceHasSuffix applies the HasSuffix predicate on the "maintenance" field.
func MaintenanceHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldMaintenance, v))
}

// MaintenanceIsNil applies the IsNil predicate on the "maintenance" field.
func MaintenanceIsNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIsNull(FieldMaintenance))
}

// MaintenanceNotNil applies the NotNil predicate on the "maintenance" field.
func MaintenanceNotNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotNull(FieldMaintenance))
}

// MaintenanceEqualFold applies the EqualFold predicate on the "maintenance" field.
func MaintenanceEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldMaintenance, v))
}

// MaintenanceContainsFold applies the ContainsFold predicate on the "maintenance" field.
func MaintenanceContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldMaintenance, v))
}

// OperatorNameEQ applies the EQ predicate on the "operator_name" field.
func OperatorNameEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEQ(FieldOperatorName, v))
}

// OperatorNameNEQ applies the NEQ predicate on the "operator_name" field.
func OperatorNameNEQ(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNEQ(FieldOperatorName, v))
}

// OperatorNameIn applies the In predicate on the "operator_name" field.
func OperatorNameIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIn(FieldOperatorName, vs...))
}

// OperatorNameNotIn applies the NotIn predicate on the "operator_name" field.
func OperatorNameNotIn(vs ...string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotIn(FieldOperatorName, vs...))
}

// OperatorNameGT applies the GT predicate on the "operator_name" field.
func OperatorNameGT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGT(FieldOperatorName, v))
}

// OperatorNameGTE applies the GTE predicate on the "operator_name" field.
func OperatorNameGTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldGTE(FieldOperatorName, v))
}

// OperatorNameLT applies the LT predicate on the "operator_name" field.
func OperatorNameLT(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLT(FieldOperatorName, v))
}

// OperatorNameLTE applies the LTE predicate on the "operator_name" field.
func OperatorNameLTE(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldLTE(FieldOperatorName, v))
}

// OperatorNameContains applies the Contains predicate on the "operator_name" field.
func OperatorNameContains(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContains(FieldOperatorName, v))
}

// OperatorNameHasPrefix applies the HasPrefix predicate on the "operator_name" field.
func OperatorNameHasPrefix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasPrefix(FieldOperatorName, v))
}

// OperatorNameHasSuffix applies the HasSuffix predicate on the "operator_name" field.
func OperatorNameHasSuffix(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldHasSuffix(FieldOperatorName, v))
}

// OperatorNameIsNil applies the IsNil predicate on the "operator_name" field.
func OperatorNameIsNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldIsNull(FieldOperatorName))
}

// OperatorNameNotNil applies the NotNil predicate on the "operator_name" field.
func OperatorNameNotNil() predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldNotNull(FieldOperatorName))
}

// OperatorNameEqualFold applies the EqualFold predicate on the "operator_name" field.
func OperatorNameEqualFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldEqualFold(FieldOperatorName, v))
}

// OperatorNameContainsFold applies the ContainsFold predicate on the "operator_name" field.
func OperatorNameContainsFold(v string) predicate.WinGameSlot {
	return predicate.WinGameSlot(sql.FieldContainsFold(FieldOperatorName, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WinGameSlot) predicate.WinGameSlot {
	return predicate.WinGameSlot(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WinGameSlot) predicate.WinGameSlot {
	return predicate.WinGameSlot(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WinGameSlot) predicate.WinGameSlot {
	return predicate.WinGameSlot(func(s *sql.Selector) {
		p(s.Not())
	})
}
