// Code generated by ent, DO NOT EDIT.

package winbetslip

import (
	"entgo.io/ent/dialect/sql"
	"gitlab.skig.tech/zero-core/common/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldID, id))
}

// RoundID applies equality check predicate on the "round_id" field. It's identical to RoundIDEQ.
func RoundID(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldRoundID, v))
}

// TransactionID applies equality check predicate on the "transaction_id" field. It's identical to TransactionIDEQ.
func TransactionID(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldTransactionID, v))
}

// GamePlatID applies equality check predicate on the "game_plat_id" field. It's identical to GamePlatIDEQ.
func GamePlatID(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGamePlatID, v))
}

// XbStatus applies equality check predicate on the "xb_status" field. It's identical to XbStatusEQ.
func XbStatus(v int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldXbStatus, v))
}

// XbUID applies equality check predicate on the "xb_uid" field. It's identical to XbUIDEQ.
func XbUID(v uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldXbUID, v))
}

// XbUsername applies equality check predicate on the "xb_username" field. It's identical to XbUsernameEQ.
func XbUsername(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldXbUsername, v))
}

// XbProfit applies equality check predicate on the "xb_profit" field. It's identical to XbProfitEQ.
func XbProfit(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldXbProfit, v))
}

// Stake applies equality check predicate on the "stake" field. It's identical to StakeEQ.
func Stake(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldStake, v))
}

// ValidStake applies equality check predicate on the "valid_stake" field. It's identical to ValidStakeEQ.
func ValidStake(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldValidStake, v))
}

// Payout applies equality check predicate on the "payout" field. It's identical to PayoutEQ.
func Payout(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldPayout, v))
}

// CoinRefund applies equality check predicate on the "coin_refund" field. It's identical to CoinRefundEQ.
func CoinRefund(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldCoinRefund, v))
}

// CoinBefore applies equality check predicate on the "coin_before" field. It's identical to CoinBeforeEQ.
func CoinBefore(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldCoinBefore, v))
}

// GameID applies equality check predicate on the "game_id" field. It's identical to GameIDEQ.
func GameID(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGameID, v))
}

// GameName applies equality check predicate on the "game_name" field. It's identical to GameNameEQ.
func GameName(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGameName, v))
}

// AmountType applies equality check predicate on the "amount_type" field. It's identical to AmountTypeEQ.
func AmountType(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldAmountType, v))
}

// GameTypeID applies equality check predicate on the "game_type_id" field. It's identical to GameTypeIDEQ.
func GameTypeID(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGameTypeID, v))
}

// GameGroupID applies equality check predicate on the "game_group_id" field. It's identical to GameGroupIDEQ.
func GameGroupID(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGameGroupID, v))
}

// SportType applies equality check predicate on the "sport_type" field. It's identical to SportTypeEQ.
func SportType(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldSportType, v))
}

// DtStarted applies equality check predicate on the "dt_started" field. It's identical to DtStartedEQ.
func DtStarted(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldDtStarted, v))
}

// DtCompleted applies equality check predicate on the "dt_completed" field. It's identical to DtCompletedEQ.
func DtCompleted(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldDtCompleted, v))
}

// WinTransactionID applies equality check predicate on the "win_transaction_id" field. It's identical to WinTransactionIDEQ.
func WinTransactionID(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldWinTransactionID, v))
}

// BetJSON applies equality check predicate on the "bet_json" field. It's identical to BetJSONEQ.
func BetJSON(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldBetJSON, v))
}

// RewardJSON applies equality check predicate on the "reward_json" field. It's identical to RewardJSONEQ.
func RewardJSON(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldRewardJSON, v))
}

// RefundJSON applies equality check predicate on the "refund_json" field. It's identical to RefundJSONEQ.
func RefundJSON(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldRefundJSON, v))
}

// CreateTimeStr applies equality check predicate on the "create_time_str" field. It's identical to CreateTimeStrEQ.
func CreateTimeStr(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldCreateTimeStr, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldUpdatedAt, v))
}

// RoundIDEQ applies the EQ predicate on the "round_id" field.
func RoundIDEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldRoundID, v))
}

// RoundIDNEQ applies the NEQ predicate on the "round_id" field.
func RoundIDNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldRoundID, v))
}

// RoundIDIn applies the In predicate on the "round_id" field.
func RoundIDIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldRoundID, vs...))
}

// RoundIDNotIn applies the NotIn predicate on the "round_id" field.
func RoundIDNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldRoundID, vs...))
}

// RoundIDGT applies the GT predicate on the "round_id" field.
func RoundIDGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldRoundID, v))
}

// RoundIDGTE applies the GTE predicate on the "round_id" field.
func RoundIDGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldRoundID, v))
}

// RoundIDLT applies the LT predicate on the "round_id" field.
func RoundIDLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldRoundID, v))
}

// RoundIDLTE applies the LTE predicate on the "round_id" field.
func RoundIDLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldRoundID, v))
}

// RoundIDContains applies the Contains predicate on the "round_id" field.
func RoundIDContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldRoundID, v))
}

// RoundIDHasPrefix applies the HasPrefix predicate on the "round_id" field.
func RoundIDHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldRoundID, v))
}

// RoundIDHasSuffix applies the HasSuffix predicate on the "round_id" field.
func RoundIDHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldRoundID, v))
}

// RoundIDEqualFold applies the EqualFold predicate on the "round_id" field.
func RoundIDEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldRoundID, v))
}

// RoundIDContainsFold applies the ContainsFold predicate on the "round_id" field.
func RoundIDContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldRoundID, v))
}

// TransactionIDEQ applies the EQ predicate on the "transaction_id" field.
func TransactionIDEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldTransactionID, v))
}

// TransactionIDNEQ applies the NEQ predicate on the "transaction_id" field.
func TransactionIDNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldTransactionID, v))
}

// TransactionIDIn applies the In predicate on the "transaction_id" field.
func TransactionIDIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldTransactionID, vs...))
}

// TransactionIDNotIn applies the NotIn predicate on the "transaction_id" field.
func TransactionIDNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldTransactionID, vs...))
}

// TransactionIDGT applies the GT predicate on the "transaction_id" field.
func TransactionIDGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldTransactionID, v))
}

// TransactionIDGTE applies the GTE predicate on the "transaction_id" field.
func TransactionIDGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldTransactionID, v))
}

// TransactionIDLT applies the LT predicate on the "transaction_id" field.
func TransactionIDLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldTransactionID, v))
}

// TransactionIDLTE applies the LTE predicate on the "transaction_id" field.
func TransactionIDLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldTransactionID, v))
}

// TransactionIDContains applies the Contains predicate on the "transaction_id" field.
func TransactionIDContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldTransactionID, v))
}

// TransactionIDHasPrefix applies the HasPrefix predicate on the "transaction_id" field.
func TransactionIDHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldTransactionID, v))
}

// TransactionIDHasSuffix applies the HasSuffix predicate on the "transaction_id" field.
func TransactionIDHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldTransactionID, v))
}

// TransactionIDEqualFold applies the EqualFold predicate on the "transaction_id" field.
func TransactionIDEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldTransactionID, v))
}

// TransactionIDContainsFold applies the ContainsFold predicate on the "transaction_id" field.
func TransactionIDContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldTransactionID, v))
}

// GamePlatIDEQ applies the EQ predicate on the "game_plat_id" field.
func GamePlatIDEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGamePlatID, v))
}

// GamePlatIDNEQ applies the NEQ predicate on the "game_plat_id" field.
func GamePlatIDNEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldGamePlatID, v))
}

// GamePlatIDIn applies the In predicate on the "game_plat_id" field.
func GamePlatIDIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldGamePlatID, vs...))
}

// GamePlatIDNotIn applies the NotIn predicate on the "game_plat_id" field.
func GamePlatIDNotIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldGamePlatID, vs...))
}

// GamePlatIDGT applies the GT predicate on the "game_plat_id" field.
func GamePlatIDGT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldGamePlatID, v))
}

// GamePlatIDGTE applies the GTE predicate on the "game_plat_id" field.
func GamePlatIDGTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldGamePlatID, v))
}

// GamePlatIDLT applies the LT predicate on the "game_plat_id" field.
func GamePlatIDLT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldGamePlatID, v))
}

// GamePlatIDLTE applies the LTE predicate on the "game_plat_id" field.
func GamePlatIDLTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldGamePlatID, v))
}

// XbStatusEQ applies the EQ predicate on the "xb_status" field.
func XbStatusEQ(v int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldXbStatus, v))
}

// XbStatusNEQ applies the NEQ predicate on the "xb_status" field.
func XbStatusNEQ(v int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldXbStatus, v))
}

// XbStatusIn applies the In predicate on the "xb_status" field.
func XbStatusIn(vs ...int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldXbStatus, vs...))
}

// XbStatusNotIn applies the NotIn predicate on the "xb_status" field.
func XbStatusNotIn(vs ...int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldXbStatus, vs...))
}

// XbStatusGT applies the GT predicate on the "xb_status" field.
func XbStatusGT(v int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldXbStatus, v))
}

// XbStatusGTE applies the GTE predicate on the "xb_status" field.
func XbStatusGTE(v int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldXbStatus, v))
}

// XbStatusLT applies the LT predicate on the "xb_status" field.
func XbStatusLT(v int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldXbStatus, v))
}

// XbStatusLTE applies the LTE predicate on the "xb_status" field.
func XbStatusLTE(v int8) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldXbStatus, v))
}

// XbUIDEQ applies the EQ predicate on the "xb_uid" field.
func XbUIDEQ(v uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldXbUID, v))
}

// XbUIDNEQ applies the NEQ predicate on the "xb_uid" field.
func XbUIDNEQ(v uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldXbUID, v))
}

// XbUIDIn applies the In predicate on the "xb_uid" field.
func XbUIDIn(vs ...uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldXbUID, vs...))
}

// XbUIDNotIn applies the NotIn predicate on the "xb_uid" field.
func XbUIDNotIn(vs ...uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldXbUID, vs...))
}

// XbUIDGT applies the GT predicate on the "xb_uid" field.
func XbUIDGT(v uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldXbUID, v))
}

// XbUIDGTE applies the GTE predicate on the "xb_uid" field.
func XbUIDGTE(v uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldXbUID, v))
}

// XbUIDLT applies the LT predicate on the "xb_uid" field.
func XbUIDLT(v uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldXbUID, v))
}

// XbUIDLTE applies the LTE predicate on the "xb_uid" field.
func XbUIDLTE(v uint32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldXbUID, v))
}

// XbUsernameEQ applies the EQ predicate on the "xb_username" field.
func XbUsernameEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldXbUsername, v))
}

// XbUsernameNEQ applies the NEQ predicate on the "xb_username" field.
func XbUsernameNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldXbUsername, v))
}

// XbUsernameIn applies the In predicate on the "xb_username" field.
func XbUsernameIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldXbUsername, vs...))
}

// XbUsernameNotIn applies the NotIn predicate on the "xb_username" field.
func XbUsernameNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldXbUsername, vs...))
}

// XbUsernameGT applies the GT predicate on the "xb_username" field.
func XbUsernameGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldXbUsername, v))
}

// XbUsernameGTE applies the GTE predicate on the "xb_username" field.
func XbUsernameGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldXbUsername, v))
}

// XbUsernameLT applies the LT predicate on the "xb_username" field.
func XbUsernameLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldXbUsername, v))
}

// XbUsernameLTE applies the LTE predicate on the "xb_username" field.
func XbUsernameLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldXbUsername, v))
}

// XbUsernameContains applies the Contains predicate on the "xb_username" field.
func XbUsernameContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldXbUsername, v))
}

// XbUsernameHasPrefix applies the HasPrefix predicate on the "xb_username" field.
func XbUsernameHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldXbUsername, v))
}

// XbUsernameHasSuffix applies the HasSuffix predicate on the "xb_username" field.
func XbUsernameHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldXbUsername, v))
}

// XbUsernameEqualFold applies the EqualFold predicate on the "xb_username" field.
func XbUsernameEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldXbUsername, v))
}

// XbUsernameContainsFold applies the ContainsFold predicate on the "xb_username" field.
func XbUsernameContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldXbUsername, v))
}

// XbProfitEQ applies the EQ predicate on the "xb_profit" field.
func XbProfitEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldXbProfit, v))
}

// XbProfitNEQ applies the NEQ predicate on the "xb_profit" field.
func XbProfitNEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldXbProfit, v))
}

// XbProfitIn applies the In predicate on the "xb_profit" field.
func XbProfitIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldXbProfit, vs...))
}

// XbProfitNotIn applies the NotIn predicate on the "xb_profit" field.
func XbProfitNotIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldXbProfit, vs...))
}

// XbProfitGT applies the GT predicate on the "xb_profit" field.
func XbProfitGT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldXbProfit, v))
}

// XbProfitGTE applies the GTE predicate on the "xb_profit" field.
func XbProfitGTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldXbProfit, v))
}

// XbProfitLT applies the LT predicate on the "xb_profit" field.
func XbProfitLT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldXbProfit, v))
}

// XbProfitLTE applies the LTE predicate on the "xb_profit" field.
func XbProfitLTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldXbProfit, v))
}

// XbProfitIsNil applies the IsNil predicate on the "xb_profit" field.
func XbProfitIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldXbProfit))
}

// XbProfitNotNil applies the NotNil predicate on the "xb_profit" field.
func XbProfitNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldXbProfit))
}

// StakeEQ applies the EQ predicate on the "stake" field.
func StakeEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldStake, v))
}

// StakeNEQ applies the NEQ predicate on the "stake" field.
func StakeNEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldStake, v))
}

// StakeIn applies the In predicate on the "stake" field.
func StakeIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldStake, vs...))
}

// StakeNotIn applies the NotIn predicate on the "stake" field.
func StakeNotIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldStake, vs...))
}

// StakeGT applies the GT predicate on the "stake" field.
func StakeGT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldStake, v))
}

// StakeGTE applies the GTE predicate on the "stake" field.
func StakeGTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldStake, v))
}

// StakeLT applies the LT predicate on the "stake" field.
func StakeLT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldStake, v))
}

// StakeLTE applies the LTE predicate on the "stake" field.
func StakeLTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldStake, v))
}

// ValidStakeEQ applies the EQ predicate on the "valid_stake" field.
func ValidStakeEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldValidStake, v))
}

// ValidStakeNEQ applies the NEQ predicate on the "valid_stake" field.
func ValidStakeNEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldValidStake, v))
}

// ValidStakeIn applies the In predicate on the "valid_stake" field.
func ValidStakeIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldValidStake, vs...))
}

// ValidStakeNotIn applies the NotIn predicate on the "valid_stake" field.
func ValidStakeNotIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldValidStake, vs...))
}

// ValidStakeGT applies the GT predicate on the "valid_stake" field.
func ValidStakeGT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldValidStake, v))
}

// ValidStakeGTE applies the GTE predicate on the "valid_stake" field.
func ValidStakeGTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldValidStake, v))
}

// ValidStakeLT applies the LT predicate on the "valid_stake" field.
func ValidStakeLT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldValidStake, v))
}

// ValidStakeLTE applies the LTE predicate on the "valid_stake" field.
func ValidStakeLTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldValidStake, v))
}

// PayoutEQ applies the EQ predicate on the "payout" field.
func PayoutEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldPayout, v))
}

// PayoutNEQ applies the NEQ predicate on the "payout" field.
func PayoutNEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldPayout, v))
}

// PayoutIn applies the In predicate on the "payout" field.
func PayoutIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldPayout, vs...))
}

// PayoutNotIn applies the NotIn predicate on the "payout" field.
func PayoutNotIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldPayout, vs...))
}

// PayoutGT applies the GT predicate on the "payout" field.
func PayoutGT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldPayout, v))
}

// PayoutGTE applies the GTE predicate on the "payout" field.
func PayoutGTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldPayout, v))
}

// PayoutLT applies the LT predicate on the "payout" field.
func PayoutLT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldPayout, v))
}

// PayoutLTE applies the LTE predicate on the "payout" field.
func PayoutLTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldPayout, v))
}

// PayoutIsNil applies the IsNil predicate on the "payout" field.
func PayoutIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldPayout))
}

// PayoutNotNil applies the NotNil predicate on the "payout" field.
func PayoutNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldPayout))
}

// CoinRefundEQ applies the EQ predicate on the "coin_refund" field.
func CoinRefundEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldCoinRefund, v))
}

// CoinRefundNEQ applies the NEQ predicate on the "coin_refund" field.
func CoinRefundNEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldCoinRefund, v))
}

// CoinRefundIn applies the In predicate on the "coin_refund" field.
func CoinRefundIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldCoinRefund, vs...))
}

// CoinRefundNotIn applies the NotIn predicate on the "coin_refund" field.
func CoinRefundNotIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldCoinRefund, vs...))
}

// CoinRefundGT applies the GT predicate on the "coin_refund" field.
func CoinRefundGT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldCoinRefund, v))
}

// CoinRefundGTE applies the GTE predicate on the "coin_refund" field.
func CoinRefundGTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldCoinRefund, v))
}

// CoinRefundLT applies the LT predicate on the "coin_refund" field.
func CoinRefundLT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldCoinRefund, v))
}

// CoinRefundLTE applies the LTE predicate on the "coin_refund" field.
func CoinRefundLTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldCoinRefund, v))
}

// CoinBeforeEQ applies the EQ predicate on the "coin_before" field.
func CoinBeforeEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldCoinBefore, v))
}

// CoinBeforeNEQ applies the NEQ predicate on the "coin_before" field.
func CoinBeforeNEQ(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldCoinBefore, v))
}

// CoinBeforeIn applies the In predicate on the "coin_before" field.
func CoinBeforeIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldCoinBefore, vs...))
}

// CoinBeforeNotIn applies the NotIn predicate on the "coin_before" field.
func CoinBeforeNotIn(vs ...float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldCoinBefore, vs...))
}

// CoinBeforeGT applies the GT predicate on the "coin_before" field.
func CoinBeforeGT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldCoinBefore, v))
}

// CoinBeforeGTE applies the GTE predicate on the "coin_before" field.
func CoinBeforeGTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldCoinBefore, v))
}

// CoinBeforeLT applies the LT predicate on the "coin_before" field.
func CoinBeforeLT(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldCoinBefore, v))
}

// CoinBeforeLTE applies the LTE predicate on the "coin_before" field.
func CoinBeforeLTE(v float64) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldCoinBefore, v))
}

// GameIDEQ applies the EQ predicate on the "game_id" field.
func GameIDEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGameID, v))
}

// GameIDNEQ applies the NEQ predicate on the "game_id" field.
func GameIDNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldGameID, v))
}

// GameIDIn applies the In predicate on the "game_id" field.
func GameIDIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldGameID, vs...))
}

// GameIDNotIn applies the NotIn predicate on the "game_id" field.
func GameIDNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldGameID, vs...))
}

// GameIDGT applies the GT predicate on the "game_id" field.
func GameIDGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldGameID, v))
}

// GameIDGTE applies the GTE predicate on the "game_id" field.
func GameIDGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldGameID, v))
}

// GameIDLT applies the LT predicate on the "game_id" field.
func GameIDLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldGameID, v))
}

// GameIDLTE applies the LTE predicate on the "game_id" field.
func GameIDLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldGameID, v))
}

// GameIDContains applies the Contains predicate on the "game_id" field.
func GameIDContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldGameID, v))
}

// GameIDHasPrefix applies the HasPrefix predicate on the "game_id" field.
func GameIDHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldGameID, v))
}

// GameIDHasSuffix applies the HasSuffix predicate on the "game_id" field.
func GameIDHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldGameID, v))
}

// GameIDEqualFold applies the EqualFold predicate on the "game_id" field.
func GameIDEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldGameID, v))
}

// GameIDContainsFold applies the ContainsFold predicate on the "game_id" field.
func GameIDContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldGameID, v))
}

// GameNameEQ applies the EQ predicate on the "game_name" field.
func GameNameEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGameName, v))
}

// GameNameNEQ applies the NEQ predicate on the "game_name" field.
func GameNameNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldGameName, v))
}

// GameNameIn applies the In predicate on the "game_name" field.
func GameNameIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldGameName, vs...))
}

// GameNameNotIn applies the NotIn predicate on the "game_name" field.
func GameNameNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldGameName, vs...))
}

// GameNameGT applies the GT predicate on the "game_name" field.
func GameNameGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldGameName, v))
}

// GameNameGTE applies the GTE predicate on the "game_name" field.
func GameNameGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldGameName, v))
}

// GameNameLT applies the LT predicate on the "game_name" field.
func GameNameLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldGameName, v))
}

// GameNameLTE applies the LTE predicate on the "game_name" field.
func GameNameLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldGameName, v))
}

// GameNameContains applies the Contains predicate on the "game_name" field.
func GameNameContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldGameName, v))
}

// GameNameHasPrefix applies the HasPrefix predicate on the "game_name" field.
func GameNameHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldGameName, v))
}

// GameNameHasSuffix applies the HasSuffix predicate on the "game_name" field.
func GameNameHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldGameName, v))
}

// GameNameIsNil applies the IsNil predicate on the "game_name" field.
func GameNameIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldGameName))
}

// GameNameNotNil applies the NotNil predicate on the "game_name" field.
func GameNameNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldGameName))
}

// GameNameEqualFold applies the EqualFold predicate on the "game_name" field.
func GameNameEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldGameName, v))
}

// GameNameContainsFold applies the ContainsFold predicate on the "game_name" field.
func GameNameContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldGameName, v))
}

// AmountTypeEQ applies the EQ predicate on the "amount_type" field.
func AmountTypeEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldAmountType, v))
}

// AmountTypeNEQ applies the NEQ predicate on the "amount_type" field.
func AmountTypeNEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldAmountType, v))
}

// AmountTypeIn applies the In predicate on the "amount_type" field.
func AmountTypeIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldAmountType, vs...))
}

// AmountTypeNotIn applies the NotIn predicate on the "amount_type" field.
func AmountTypeNotIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldAmountType, vs...))
}

// AmountTypeGT applies the GT predicate on the "amount_type" field.
func AmountTypeGT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldAmountType, v))
}

// AmountTypeGTE applies the GTE predicate on the "amount_type" field.
func AmountTypeGTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldAmountType, v))
}

// AmountTypeLT applies the LT predicate on the "amount_type" field.
func AmountTypeLT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldAmountType, v))
}

// AmountTypeLTE applies the LTE predicate on the "amount_type" field.
func AmountTypeLTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldAmountType, v))
}

// GameTypeIDEQ applies the EQ predicate on the "game_type_id" field.
func GameTypeIDEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGameTypeID, v))
}

// GameTypeIDNEQ applies the NEQ predicate on the "game_type_id" field.
func GameTypeIDNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldGameTypeID, v))
}

// GameTypeIDIn applies the In predicate on the "game_type_id" field.
func GameTypeIDIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldGameTypeID, vs...))
}

// GameTypeIDNotIn applies the NotIn predicate on the "game_type_id" field.
func GameTypeIDNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldGameTypeID, vs...))
}

// GameTypeIDGT applies the GT predicate on the "game_type_id" field.
func GameTypeIDGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldGameTypeID, v))
}

// GameTypeIDGTE applies the GTE predicate on the "game_type_id" field.
func GameTypeIDGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldGameTypeID, v))
}

// GameTypeIDLT applies the LT predicate on the "game_type_id" field.
func GameTypeIDLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldGameTypeID, v))
}

// GameTypeIDLTE applies the LTE predicate on the "game_type_id" field.
func GameTypeIDLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldGameTypeID, v))
}

// GameTypeIDContains applies the Contains predicate on the "game_type_id" field.
func GameTypeIDContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldGameTypeID, v))
}

// GameTypeIDHasPrefix applies the HasPrefix predicate on the "game_type_id" field.
func GameTypeIDHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldGameTypeID, v))
}

// GameTypeIDHasSuffix applies the HasSuffix predicate on the "game_type_id" field.
func GameTypeIDHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldGameTypeID, v))
}

// GameTypeIDEqualFold applies the EqualFold predicate on the "game_type_id" field.
func GameTypeIDEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldGameTypeID, v))
}

// GameTypeIDContainsFold applies the ContainsFold predicate on the "game_type_id" field.
func GameTypeIDContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldGameTypeID, v))
}

// GameGroupIDEQ applies the EQ predicate on the "game_group_id" field.
func GameGroupIDEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldGameGroupID, v))
}

// GameGroupIDNEQ applies the NEQ predicate on the "game_group_id" field.
func GameGroupIDNEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldGameGroupID, v))
}

// GameGroupIDIn applies the In predicate on the "game_group_id" field.
func GameGroupIDIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldGameGroupID, vs...))
}

// GameGroupIDNotIn applies the NotIn predicate on the "game_group_id" field.
func GameGroupIDNotIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldGameGroupID, vs...))
}

// GameGroupIDGT applies the GT predicate on the "game_group_id" field.
func GameGroupIDGT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldGameGroupID, v))
}

// GameGroupIDGTE applies the GTE predicate on the "game_group_id" field.
func GameGroupIDGTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldGameGroupID, v))
}

// GameGroupIDLT applies the LT predicate on the "game_group_id" field.
func GameGroupIDLT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldGameGroupID, v))
}

// GameGroupIDLTE applies the LTE predicate on the "game_group_id" field.
func GameGroupIDLTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldGameGroupID, v))
}

// GameGroupIDIsNil applies the IsNil predicate on the "game_group_id" field.
func GameGroupIDIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldGameGroupID))
}

// GameGroupIDNotNil applies the NotNil predicate on the "game_group_id" field.
func GameGroupIDNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldGameGroupID))
}

// SportTypeEQ applies the EQ predicate on the "sport_type" field.
func SportTypeEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldSportType, v))
}

// SportTypeNEQ applies the NEQ predicate on the "sport_type" field.
func SportTypeNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldSportType, v))
}

// SportTypeIn applies the In predicate on the "sport_type" field.
func SportTypeIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldSportType, vs...))
}

// SportTypeNotIn applies the NotIn predicate on the "sport_type" field.
func SportTypeNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldSportType, vs...))
}

// SportTypeGT applies the GT predicate on the "sport_type" field.
func SportTypeGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldSportType, v))
}

// SportTypeGTE applies the GTE predicate on the "sport_type" field.
func SportTypeGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldSportType, v))
}

// SportTypeLT applies the LT predicate on the "sport_type" field.
func SportTypeLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldSportType, v))
}

// SportTypeLTE applies the LTE predicate on the "sport_type" field.
func SportTypeLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldSportType, v))
}

// SportTypeContains applies the Contains predicate on the "sport_type" field.
func SportTypeContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldSportType, v))
}

// SportTypeHasPrefix applies the HasPrefix predicate on the "sport_type" field.
func SportTypeHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldSportType, v))
}

// SportTypeHasSuffix applies the HasSuffix predicate on the "sport_type" field.
func SportTypeHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldSportType, v))
}

// SportTypeIsNil applies the IsNil predicate on the "sport_type" field.
func SportTypeIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldSportType))
}

// SportTypeNotNil applies the NotNil predicate on the "sport_type" field.
func SportTypeNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldSportType))
}

// SportTypeEqualFold applies the EqualFold predicate on the "sport_type" field.
func SportTypeEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldSportType, v))
}

// SportTypeContainsFold applies the ContainsFold predicate on the "sport_type" field.
func SportTypeContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldSportType, v))
}

// DtStartedEQ applies the EQ predicate on the "dt_started" field.
func DtStartedEQ(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldDtStarted, v))
}

// DtStartedNEQ applies the NEQ predicate on the "dt_started" field.
func DtStartedNEQ(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldDtStarted, v))
}

// DtStartedIn applies the In predicate on the "dt_started" field.
func DtStartedIn(vs ...int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldDtStarted, vs...))
}

// DtStartedNotIn applies the NotIn predicate on the "dt_started" field.
func DtStartedNotIn(vs ...int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldDtStarted, vs...))
}

// DtStartedGT applies the GT predicate on the "dt_started" field.
func DtStartedGT(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldDtStarted, v))
}

// DtStartedGTE applies the GTE predicate on the "dt_started" field.
func DtStartedGTE(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldDtStarted, v))
}

// DtStartedLT applies the LT predicate on the "dt_started" field.
func DtStartedLT(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldDtStarted, v))
}

// DtStartedLTE applies the LTE predicate on the "dt_started" field.
func DtStartedLTE(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldDtStarted, v))
}

// DtCompletedEQ applies the EQ predicate on the "dt_completed" field.
func DtCompletedEQ(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldDtCompleted, v))
}

// DtCompletedNEQ applies the NEQ predicate on the "dt_completed" field.
func DtCompletedNEQ(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldDtCompleted, v))
}

// DtCompletedIn applies the In predicate on the "dt_completed" field.
func DtCompletedIn(vs ...int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldDtCompleted, vs...))
}

// DtCompletedNotIn applies the NotIn predicate on the "dt_completed" field.
func DtCompletedNotIn(vs ...int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldDtCompleted, vs...))
}

// DtCompletedGT applies the GT predicate on the "dt_completed" field.
func DtCompletedGT(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldDtCompleted, v))
}

// DtCompletedGTE applies the GTE predicate on the "dt_completed" field.
func DtCompletedGTE(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldDtCompleted, v))
}

// DtCompletedLT applies the LT predicate on the "dt_completed" field.
func DtCompletedLT(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldDtCompleted, v))
}

// DtCompletedLTE applies the LTE predicate on the "dt_completed" field.
func DtCompletedLTE(v int) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldDtCompleted, v))
}

// DtCompletedIsNil applies the IsNil predicate on the "dt_completed" field.
func DtCompletedIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldDtCompleted))
}

// DtCompletedNotNil applies the NotNil predicate on the "dt_completed" field.
func DtCompletedNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldDtCompleted))
}

// WinTransactionIDEQ applies the EQ predicate on the "win_transaction_id" field.
func WinTransactionIDEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldWinTransactionID, v))
}

// WinTransactionIDNEQ applies the NEQ predicate on the "win_transaction_id" field.
func WinTransactionIDNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldWinTransactionID, v))
}

// WinTransactionIDIn applies the In predicate on the "win_transaction_id" field.
func WinTransactionIDIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldWinTransactionID, vs...))
}

// WinTransactionIDNotIn applies the NotIn predicate on the "win_transaction_id" field.
func WinTransactionIDNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldWinTransactionID, vs...))
}

// WinTransactionIDGT applies the GT predicate on the "win_transaction_id" field.
func WinTransactionIDGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldWinTransactionID, v))
}

// WinTransactionIDGTE applies the GTE predicate on the "win_transaction_id" field.
func WinTransactionIDGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldWinTransactionID, v))
}

// WinTransactionIDLT applies the LT predicate on the "win_transaction_id" field.
func WinTransactionIDLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldWinTransactionID, v))
}

// WinTransactionIDLTE applies the LTE predicate on the "win_transaction_id" field.
func WinTransactionIDLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldWinTransactionID, v))
}

// WinTransactionIDContains applies the Contains predicate on the "win_transaction_id" field.
func WinTransactionIDContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldWinTransactionID, v))
}

// WinTransactionIDHasPrefix applies the HasPrefix predicate on the "win_transaction_id" field.
func WinTransactionIDHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldWinTransactionID, v))
}

// WinTransactionIDHasSuffix applies the HasSuffix predicate on the "win_transaction_id" field.
func WinTransactionIDHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldWinTransactionID, v))
}

// WinTransactionIDIsNil applies the IsNil predicate on the "win_transaction_id" field.
func WinTransactionIDIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldWinTransactionID))
}

// WinTransactionIDNotNil applies the NotNil predicate on the "win_transaction_id" field.
func WinTransactionIDNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldWinTransactionID))
}

// WinTransactionIDEqualFold applies the EqualFold predicate on the "win_transaction_id" field.
func WinTransactionIDEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldWinTransactionID, v))
}

// WinTransactionIDContainsFold applies the ContainsFold predicate on the "win_transaction_id" field.
func WinTransactionIDContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldWinTransactionID, v))
}

// BetJSONEQ applies the EQ predicate on the "bet_json" field.
func BetJSONEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldBetJSON, v))
}

// BetJSONNEQ applies the NEQ predicate on the "bet_json" field.
func BetJSONNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldBetJSON, v))
}

// BetJSONIn applies the In predicate on the "bet_json" field.
func BetJSONIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldBetJSON, vs...))
}

// BetJSONNotIn applies the NotIn predicate on the "bet_json" field.
func BetJSONNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldBetJSON, vs...))
}

// BetJSONGT applies the GT predicate on the "bet_json" field.
func BetJSONGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldBetJSON, v))
}

// BetJSONGTE applies the GTE predicate on the "bet_json" field.
func BetJSONGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldBetJSON, v))
}

// BetJSONLT applies the LT predicate on the "bet_json" field.
func BetJSONLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldBetJSON, v))
}

// BetJSONLTE applies the LTE predicate on the "bet_json" field.
func BetJSONLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldBetJSON, v))
}

// BetJSONContains applies the Contains predicate on the "bet_json" field.
func BetJSONContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldBetJSON, v))
}

// BetJSONHasPrefix applies the HasPrefix predicate on the "bet_json" field.
func BetJSONHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldBetJSON, v))
}

// BetJSONHasSuffix applies the HasSuffix predicate on the "bet_json" field.
func BetJSONHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldBetJSON, v))
}

// BetJSONIsNil applies the IsNil predicate on the "bet_json" field.
func BetJSONIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldBetJSON))
}

// BetJSONNotNil applies the NotNil predicate on the "bet_json" field.
func BetJSONNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldBetJSON))
}

// BetJSONEqualFold applies the EqualFold predicate on the "bet_json" field.
func BetJSONEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldBetJSON, v))
}

// BetJSONContainsFold applies the ContainsFold predicate on the "bet_json" field.
func BetJSONContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldBetJSON, v))
}

// RewardJSONEQ applies the EQ predicate on the "reward_json" field.
func RewardJSONEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldRewardJSON, v))
}

// RewardJSONNEQ applies the NEQ predicate on the "reward_json" field.
func RewardJSONNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldRewardJSON, v))
}

// RewardJSONIn applies the In predicate on the "reward_json" field.
func RewardJSONIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldRewardJSON, vs...))
}

// RewardJSONNotIn applies the NotIn predicate on the "reward_json" field.
func RewardJSONNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldRewardJSON, vs...))
}

// RewardJSONGT applies the GT predicate on the "reward_json" field.
func RewardJSONGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldRewardJSON, v))
}

// RewardJSONGTE applies the GTE predicate on the "reward_json" field.
func RewardJSONGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldRewardJSON, v))
}

// RewardJSONLT applies the LT predicate on the "reward_json" field.
func RewardJSONLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldRewardJSON, v))
}

// RewardJSONLTE applies the LTE predicate on the "reward_json" field.
func RewardJSONLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldRewardJSON, v))
}

// RewardJSONContains applies the Contains predicate on the "reward_json" field.
func RewardJSONContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldRewardJSON, v))
}

// RewardJSONHasPrefix applies the HasPrefix predicate on the "reward_json" field.
func RewardJSONHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldRewardJSON, v))
}

// RewardJSONHasSuffix applies the HasSuffix predicate on the "reward_json" field.
func RewardJSONHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldRewardJSON, v))
}

// RewardJSONIsNil applies the IsNil predicate on the "reward_json" field.
func RewardJSONIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldRewardJSON))
}

// RewardJSONNotNil applies the NotNil predicate on the "reward_json" field.
func RewardJSONNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldRewardJSON))
}

// RewardJSONEqualFold applies the EqualFold predicate on the "reward_json" field.
func RewardJSONEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldRewardJSON, v))
}

// RewardJSONContainsFold applies the ContainsFold predicate on the "reward_json" field.
func RewardJSONContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldRewardJSON, v))
}

// RefundJSONEQ applies the EQ predicate on the "refund_json" field.
func RefundJSONEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldRefundJSON, v))
}

// RefundJSONNEQ applies the NEQ predicate on the "refund_json" field.
func RefundJSONNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldRefundJSON, v))
}

// RefundJSONIn applies the In predicate on the "refund_json" field.
func RefundJSONIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldRefundJSON, vs...))
}

// RefundJSONNotIn applies the NotIn predicate on the "refund_json" field.
func RefundJSONNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldRefundJSON, vs...))
}

// RefundJSONGT applies the GT predicate on the "refund_json" field.
func RefundJSONGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldRefundJSON, v))
}

// RefundJSONGTE applies the GTE predicate on the "refund_json" field.
func RefundJSONGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldRefundJSON, v))
}

// RefundJSONLT applies the LT predicate on the "refund_json" field.
func RefundJSONLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldRefundJSON, v))
}

// RefundJSONLTE applies the LTE predicate on the "refund_json" field.
func RefundJSONLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldRefundJSON, v))
}

// RefundJSONContains applies the Contains predicate on the "refund_json" field.
func RefundJSONContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldRefundJSON, v))
}

// RefundJSONHasPrefix applies the HasPrefix predicate on the "refund_json" field.
func RefundJSONHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldRefundJSON, v))
}

// RefundJSONHasSuffix applies the HasSuffix predicate on the "refund_json" field.
func RefundJSONHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldRefundJSON, v))
}

// RefundJSONIsNil applies the IsNil predicate on the "refund_json" field.
func RefundJSONIsNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIsNull(FieldRefundJSON))
}

// RefundJSONNotNil applies the NotNil predicate on the "refund_json" field.
func RefundJSONNotNil() predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotNull(FieldRefundJSON))
}

// RefundJSONEqualFold applies the EqualFold predicate on the "refund_json" field.
func RefundJSONEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldRefundJSON, v))
}

// RefundJSONContainsFold applies the ContainsFold predicate on the "refund_json" field.
func RefundJSONContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldRefundJSON, v))
}

// CreateTimeStrEQ applies the EQ predicate on the "create_time_str" field.
func CreateTimeStrEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldCreateTimeStr, v))
}

// CreateTimeStrNEQ applies the NEQ predicate on the "create_time_str" field.
func CreateTimeStrNEQ(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldCreateTimeStr, v))
}

// CreateTimeStrIn applies the In predicate on the "create_time_str" field.
func CreateTimeStrIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldCreateTimeStr, vs...))
}

// CreateTimeStrNotIn applies the NotIn predicate on the "create_time_str" field.
func CreateTimeStrNotIn(vs ...string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldCreateTimeStr, vs...))
}

// CreateTimeStrGT applies the GT predicate on the "create_time_str" field.
func CreateTimeStrGT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldCreateTimeStr, v))
}

// CreateTimeStrGTE applies the GTE predicate on the "create_time_str" field.
func CreateTimeStrGTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldCreateTimeStr, v))
}

// CreateTimeStrLT applies the LT predicate on the "create_time_str" field.
func CreateTimeStrLT(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldCreateTimeStr, v))
}

// CreateTimeStrLTE applies the LTE predicate on the "create_time_str" field.
func CreateTimeStrLTE(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldCreateTimeStr, v))
}

// CreateTimeStrContains applies the Contains predicate on the "create_time_str" field.
func CreateTimeStrContains(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContains(FieldCreateTimeStr, v))
}

// CreateTimeStrHasPrefix applies the HasPrefix predicate on the "create_time_str" field.
func CreateTimeStrHasPrefix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasPrefix(FieldCreateTimeStr, v))
}

// CreateTimeStrHasSuffix applies the HasSuffix predicate on the "create_time_str" field.
func CreateTimeStrHasSuffix(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldHasSuffix(FieldCreateTimeStr, v))
}

// CreateTimeStrEqualFold applies the EqualFold predicate on the "create_time_str" field.
func CreateTimeStrEqualFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEqualFold(FieldCreateTimeStr, v))
}

// CreateTimeStrContainsFold applies the ContainsFold predicate on the "create_time_str" field.
func CreateTimeStrContainsFold(v string) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldContainsFold(FieldCreateTimeStr, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v int32) predicate.WinBetslip {
	return predicate.WinBetslip(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WinBetslip) predicate.WinBetslip {
	return predicate.WinBetslip(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WinBetslip) predicate.WinBetslip {
	return predicate.WinBetslip(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WinBetslip) predicate.WinBetslip {
	return predicate.WinBetslip(func(s *sql.Selector) {
		p(s.Not())
	})
}
