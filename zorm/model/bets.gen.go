// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import "github.com/shopspring/decimal"

const TableNameBet = "bets"

// Bet mapped from table <bets>
type Bet struct {
	ID               int64           `gorm:"column:id;type:bigint;primaryKey;comment:主键" json:"id,string"`                                                         // 主键
	RoundID          string          `gorm:"column:round_id;type:varchar(128);not null;comment:回合id" json:"roundId"`                                               // 回合id
	TransactionID    string          `gorm:"column:transaction_id;type:varchar(128);not null;comment:注单号 对应三方拉单transaction_id" json:"transactionId"`               // 注单号 对应三方拉单transaction_id
	GamePlatID       int64           `gorm:"column:game_plat_id;type:int;not null;comment:游戏平台id" json:"gamePlatId"`                                               // 游戏平台id
	XbStatus         int64           `gorm:"column:xb_status;type:tinyint;not null;comment:注单状态 1:待开彩  2:完成  3: 退款" json:"xbStatus"`                               // 注单状态 1:待开彩  2:完成  3: 退款
	XbUID            int64           `gorm:"column:xb_uid;type:int unsigned;not null;comment:对应user表id" json:"xbUid"`                                              // 对应user表id
	XbUsername       string          `gorm:"column:xb_username;type:varchar(32);not null;comment:对应user表username" json:"xbUsername"`                               // 对应user表username
	XbProfit         decimal.Decimal `gorm:"column:xb_profit;type:decimal(15,4);default:0.0000;comment:盈亏金额" json:"xbProfit"`                                      // 盈亏金额
	Stake            decimal.Decimal `gorm:"column:stake;type:decimal(15,4);not null;default:0.0000;comment:投注" json:"stake"`                                      // 投注
	ValidStake       decimal.Decimal `gorm:"column:valid_stake;type:decimal(15,4);not null;default:0.0000;comment:有效投注金额" json:"validStake"`                       // 有效投注金额
	Payout           decimal.Decimal `gorm:"column:payout;type:decimal(15,4);default:0.0000;comment:派彩" json:"payout"`                                             // 派彩
	CoinRefund       decimal.Decimal `gorm:"column:coin_refund;type:decimal(15,4);not null;default:0.0000;comment:退款金额" json:"coinRefund"`                         // 退款金额
	CoinBefore       decimal.Decimal `gorm:"column:coin_before;type:decimal(15,4);not null;default:0.0000;comment:投注前金额" json:"coinBefore"`                        // 投注前金额
	GameID           string          `gorm:"column:game_id;type:varchar(48);not null;comment:游戏id 对应game_list表id" json:"gameId"`                                   // 游戏id 对应game_list表id
	GameName         string          `gorm:"column:game_name;type:varchar(64);comment:游戏名称" json:"gameName"`                                                       // 游戏名称
	AmountType       int64           `gorm:"column:amount_type;type:int;not null;comment:投注方式 1:现金，2:奖金 3:免费旋转 4:活动免费旋转" json:"amountType"`                        // 投注方式 1:现金，2:奖金 3:免费旋转 4:活动免费旋转
	GameTypeID       string          `gorm:"column:game_type_id;type:varchar(48);not null;comment:游戏子类型id 对应game_slot 表id" json:"gameTypeId"`                      // 游戏子类型id 对应game_slot 表id
	GameGroupID      int64           `gorm:"column:game_group_id;type:int;comment:游戏大类类型:1-体育 2-电子 3-真人 4-捕鱼 5-棋牌 6-电竞 7-彩票 8-动物 9-快速 10-技能'," json:"gameGroupId"` // 游戏大类类型:1-体育 2-电子 3-真人 4-捕鱼 5-棋牌 6-电竞 7-彩票 8-动物 9-快速 10-技能',
	SportType        string          `gorm:"column:sport_type;type:varchar(200);comment:体育投注类型" json:"sportType"`                                                  // 体育投注类型
	DtStarted        int64           `gorm:"column:dt_started;type:bigint;not null;comment:游戏开始时间" json:"dtStarted"`                                               // 游戏开始时间
	DtCompleted      int64           `gorm:"column:dt_completed;type:bigint;comment:游戏结束时间" json:"dtCompleted"`                                                    // 游戏结束时间
	WinTransactionID string          `gorm:"column:win_transaction_id;type:varchar(300);comment:开奖交易单号" json:"winTransactionId"`                                   // 开奖交易单号
	BetJSON          string          `gorm:"column:bet_json;type:text;comment:投注原始json" json:"betJson"`                                                            // 投注原始json
	RewardJSON       string          `gorm:"column:reward_json;type:text;comment:开彩原始json" json:"rewardJson"`                                                      // 开彩原始json
	CreateTimeStr    string          `gorm:"column:create_time_str;type:varchar(50);not null;comment:投注时间" json:"createTimeStr"`                                   // 投注时间
	CreatedAt        int64           `gorm:"column:created_at;comment:创建时间" json:"createdAt"`
	Diff             decimal.Decimal `gorm:"column:diff;type:decimal(15,4)" json:"diff"`
	UpdatedAt        int64           `gorm:"column:updated_at;comment:更新时间" json:"updatedAt"`
}

// TableName Bet's table name
func (*Bet) TableName() string {
	return TableNameBet
}
